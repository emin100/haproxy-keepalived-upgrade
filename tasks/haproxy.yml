---
- name: Create a directory if it does not exist
  local_action:
    module: file
    path: "{{ tmp_directory }}"
    state: directory

- name: haproxy stat
  local_action:
    module: stat
    path: "{{ tmp_directory }}haproxy-{{ haproxy_version }}.tar.gz"
  register: st

- name: download haproxy
  local_action:
    module: get_url
    url: "https://www.haproxy.org/download/{{ haproxy_version.split('.')[:2]|join('.') }}/src/haproxy-{{ haproxy_version }}.tar.gz"
    dest: "{{ tmp_directory }}/haproxy-{{ haproxy_version }}.tar.gz"
  when: st.stat.exists is false

- name: Copy files
  become: yes
  ansible.builtin.copy:
    src: "{{ tmp_directory }}/{{ item }}"
    dest: /tmp/{{ item }}
    owner: root
    group: root
    mode: '0755'
  with_items:
    - haproxy-{{ haproxy_version }}.tar.gz

- name: RHEL install packages
  become: true
  ansible.builtin.package:
    name:
      - gcc-c++ 
      - openssl-devel 
      - pcre-static 
      - pcre-devel 
      - systemd-devel
      - nc
    state: latest
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Debian install packages
  become: true
  apt:
    pkg:
      - build-essential 
      - libssl-dev
      - libsystemd-dev
      - netcat
      - libpcre3-dev 
    update_cache: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Haproxy stopped
  become: yes
  ansible.builtin.systemd:
    state: stopped
    name: haproxy
  ignore_errors: yes

- name: Unarchive haproxy-x.x.x.tar.gz
  ansible.builtin.unarchive:
    src: /tmp/haproxy-{{ haproxy_version }}.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Build haproxy 'all' target with extra arguments
  make:
    chdir: /tmp/haproxy-{{ haproxy_version }}
    target: all
    params:
      TARGET: linux-glibc 
      USE_PCRE: 1 
      USE_OPENSSL: 1 
      USE_ZLIB: 1 
      USE_CRYPT_H: 1 
      USE_LIBCRYPT: 1 
      USE_SYSTEMD: 1
      USE_PROMEX: 1

- name: Build haproxy 'install' target with extra arguments
  become: yes
  make:
    chdir: /tmp/haproxy-{{ haproxy_version }}
    target: install

- name: Copy config files
  become: yes
  ansible.builtin.copy:
    src: "/etc/haproxy/{{ item }}"
    dest: "/etc/haproxy/{{ item }}.old"
    owner: root
    group: root
    remote_src: yes
  with_items:
    - haproxy.cfg
  ignore_errors: yes

- name: Remove haproxy package
  become: yes
  ansible.builtin.package:
    name:
      - haproxy
    state: absent
  ignore_errors: yes

- name: Copy config files
  become: yes
  ansible.builtin.copy:
    src: "/etc/haproxy/{{ item }}.old"
    dest: "/etc/haproxy/{{ item }}"
    owner: root
    group: root
    remote_src: yes
  with_items:
    - haproxy.cfg
  ignore_errors: yes

- name: Copy service files
  become: yes
  ansible.builtin.copy:
    src: "files/{{ item }}"
    dest: /usr/lib/systemd/system/{{ item }}
    owner: root
    group: root
  with_items:
    - haproxy.service

- name: Create a directory if it does not exist
  become: yes
  ansible.builtin.file:
    path: "/etc/haproxy"
    state: directory
  ignore_errors: yes

- name: Copy service files
  become: yes
  ansible.builtin.copy:
    src: "files/{{ item }}"
    dest: /etc/haproxy/{{ item }}
    owner: root
    group: root
  with_items:
    - haproxy.cfg
    - master.sh
    - replica.sh

- name: Haproxy reload and restarted
  become: yes
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: haproxy

- name: Delete install files/folders
  become: yes
  file:
    path: "/tmp/{{ item }}"
    state: absent
  with_items:
    - haproxy-{{ haproxy_version }}
    - haproxy-{{ haproxy_version }}.tar.gz